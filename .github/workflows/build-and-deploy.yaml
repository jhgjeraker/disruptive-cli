name: Build and Deploy

on:
  release:
    types: [published]
  workflow_dispatch:


jobs:
  
  build_wheel:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Python ${{ matrix.python-version }} Setup
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build Distribution
      run: make build
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: wheel
        path: dist/*
        retention-days: 7
        if-no-files-found: error


  test_wheel:
    needs: build_wheel
    runs-on: "${{ matrix.platform }}"
    strategy:
      matrix:
        platform: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Python ${{ matrix.python-version }} Setup
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pull Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: wheel
          path: dist
      - name: Show Files
        run: ls -R
      - name: Install from Wheel
        run: pip install dist/*.whl
      - name: Call CLI
        run: dt --version

  deploy_pypi:
    needs: test_wheel
    runs-on: "ubuntu-latest"
    steps:
      - name: Python Setup
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - run: pip install twine
      - name: Pull Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: wheel
          path: dist
      - name: Show Files
        run: ls -R
      - name: Publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --verbose --skip-existing --non-interactive dist/*
